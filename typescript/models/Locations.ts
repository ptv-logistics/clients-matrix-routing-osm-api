/* tslint:disable */
/* eslint-disable */
/**
 * Matrix Routing OSM
 * With the Matrix Routing OSM service you can compute distances and travel times between a set of origins and destinations based on open street map data.
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
} from './Location';

/**
 * 
 * @export
 * @interface Locations
 */
export interface Locations {
    /**
     * The list of origins.
     * @type {Array<Location>}
     * @memberof Locations
     */
    origins: Array<Location>;
    /**
     * The list of destinations. If this list is empty, the destinations are equal to the origins.
     * @type {Array<Location>}
     * @memberof Locations
     */
    destinations?: Array<Location>;
}

/**
 * Check if a given object implements the Locations interface.
 */
export function instanceOfLocations(value: object): value is Locations {
    if (!('origins' in value) || value['origins'] === undefined) return false;
    return true;
}

export function LocationsFromJSON(json: any): Locations {
    return LocationsFromJSONTyped(json, false);
}

export function LocationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Locations {
    if (json == null) {
        return json;
    }
    return {
        
        'origins': ((json['origins'] as Array<any>).map(LocationFromJSON)),
        'destinations': json['destinations'] == null ? undefined : ((json['destinations'] as Array<any>).map(LocationFromJSON)),
    };
}

export function LocationsToJSON(value?: Locations | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'origins': ((value['origins'] as Array<any>).map(LocationToJSON)),
        'destinations': value['destinations'] == null ? undefined : ((value['destinations'] as Array<any>).map(LocationToJSON)),
    };
}

