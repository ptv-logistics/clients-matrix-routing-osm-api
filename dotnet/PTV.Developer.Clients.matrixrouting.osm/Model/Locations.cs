/*
 * Matrix Routing OSM
 *
 * With the Matrix Routing OSM service you can compute distances and travel times between a set of origins and destinations based on open street map data.
 *
 * The version of the OpenAPI document: 1.6
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.matrixrouting.osm.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.matrixrouting.osm.Model
{
    /// <summary>
    /// Locations
    /// </summary>
    [DataContract(Name = "Locations")]
    public partial class Locations : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Locations" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Locations() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Locations" /> class.
        /// </summary>
        /// <param name="origins">The list of origins. (required).</param>
        /// <param name="destinations">The list of destinations. If this list is empty, the destinations are equal to the origins..</param>
        public Locations(List<Location> origins = default(List<Location>), List<Location> destinations = default(List<Location>))
        {
            // to ensure "origins" is required (not null)
            if (origins == null)
            {
                throw new ArgumentNullException("origins is a required property for Locations and cannot be null");
            }
            this.Origins = origins;
            this.Destinations = destinations;
        }

        /// <summary>
        /// The list of origins.
        /// </summary>
        /// <value>The list of origins.</value>
        [DataMember(Name = "origins", IsRequired = true, EmitDefaultValue = true)]
        public List<Location> Origins { get; set; }

        /// <summary>
        /// The list of destinations. If this list is empty, the destinations are equal to the origins.
        /// </summary>
        /// <value>The list of destinations. If this list is empty, the destinations are equal to the origins.</value>
        [DataMember(Name = "destinations", EmitDefaultValue = false)]
        public List<Location> Destinations { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Locations {\n");
            sb.Append("  Origins: ").Append(Origins).Append("\n");
            sb.Append("  Destinations: ").Append(Destinations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
